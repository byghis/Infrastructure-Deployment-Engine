/* file: resource_manager.idl */

#include "hashmap.idl"

module ResourceManager {

	/* NoUsed */
	exception Failure {
		string message;
	};
	exception ReservationFailed {
	};
	/* Used in run_instances */
	typedef StringSeq list;
	
	/* Instance Data */
	struct InstanceData{			/* Example */
		string image_id;		/* emi-01FD1576 */
		string public_dns_name;	 	/* 139.82.2.179 */
		string private_dns_name; 	/* 139.82.2.179 */
		string state;			/* running */
		string key_name;		/* mykey */
		string ami_launch_index;	/* 0 */
		string product_codes;		/* *unknow */
		string instance_type;		/* m1.small */
		string launch_time;		/* 2011-03-17T19:31:46.003Z */
		string placement;		/* clusterpituba */
		string kernel;			/* eki-48261651 */
		string ramdisk;			/* eri-AB77179D */
	};
	
	/* Instance Info */
	struct InstanceInfo{
		string id; 			/* i-52E10937 (TODO: change to instance.id) */
		InstanceData instance_data;
	};

	/* ImageData */
	struct ImageData{
		string location;	/* ubuntu-image-bucket/ubuntu.9-04.x86.img.manifest.xml */
		string ownerId;		/* admin */
		string state;		/* available */
		string is_type;		/* public (or private) TODO: define a retrieve logic */
		string architecture;	/* x86_64 */
		string type;		/* machine (verify) */ 
		string ramdisk_id;	/* eri-AB77179D (verify: ramdisk_id is None) */ 
		string kernel_id;	/* eki-48261651 (verify: kernel_id is None) */
	};

	/* ImageInfo */
	struct ImageInfo{
		string image_id;	/* image */
		ImageData image_data;	
	};

	/* Volume */
	/* AvailabilityZone */

	/* Python: List */
	typedef sequence<InstanceInfo> InstanceInfoSeq;
	
	/* Reservation Data */
	struct ReservationData{		/* Example */
		string owner_id;	/* admin */
		string group_id;	/* default */
	};
	
	struct ReservationInfo{				/* Example */
		string id;				/* r-3BC50723 */
		ReservationData reservation_data;	
		InstanceInfoSeq instances;
	};

	typedef sequence<ReservationInfo> ReservationInfoSeq;

	/* Instance */
	interface Instance{

		/* Reservations Alpha */
		//void get_reservations();		/* @deprecated */
		//StringSeq get_reservation_ids();	/* return list reservations ids*/
		//HashObjectSeq get_reservations();	/* return a HashObject's list */
		//Hashtable get_reservations_list(); 	/* @review */
		
		/* Reservations */
		StringSeq get_reservation_ids();
		ReservationInfoSeq get_reservations();

		/* Instances */
		StringSeq get_instance_ids();
		unsigned short get_num_instances();
		InstanceInfoSeq get_all_instances();
		
		/* Get Instances */
		InstanceInfoSeq get_instances(	in unsigned short num_instances,
						in HashObjectSeq policies,
				 		in list instance_ids);
		
		/* Run Instances */
		ReservationInfo run_instances(	in unsigned short num_instances,
						in HashObjectSeq policies);// raise ReservationFailed;
		
		/* VM operations */
		unsigned short reboot_instances(in StringSeq instance_ids);
		void terminate_instances(in StringSeq instance_ids); //check return type
		boolean show_console(in StringSeq instance_ids);
		
		/* Utility functions */
		StringSeq get_ips_instances(in unsigned short num_instances);
		StringSeq get_ids_instances(in unsigned short num_instances);
		StringSeq get_ids(in InstanceInfoSeq instances_info);
		StringSeq get_ips(in InstanceInfoSeq instances_info);
	};

	interface Image{

		ImageInfo get_images(); /* return all images */
		/* other functions */
		//ImageData get_images(in string image_id);
	
	};

	//interface AvailabilityZones{};
	//interface Volume{};
};
